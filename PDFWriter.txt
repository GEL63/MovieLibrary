package pdfwriter;

import java.io.FileOutputStream;
import java.util.List;

//****
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

public class PDFWriter {
		
	private static Font catFont =  new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
    	private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.RED);
    	private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16, Font.BOLD);
    	private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);
	
	public int writePdfFile(String title, List<String> strList, String fileName){		
		
		Document document = null;
		PdfWriter writer = null;
		try{	
			document = new Document(PageSize.A4);
			writer = PdfWriter.getInstance(document, new FileOutputStream(fileName));
			document.open();
			
			Font myfont = new Font();
	        	myfont.setStyle(Font.NORMAL);
	        	myfont.setSize(11);
	        	document.add(new Paragraph("\n"));
	        
			createTable(document, title, strList);   
		}catch(Exception e){
			return -1;			
		}
		document.close();
	    	writer.close();  	
		System.out.println("All good");
		return 1;

	}

	private static void addTitlePage(Document document, String title) throws DocumentException {
		
		Paragraph paragraph = new Paragraph();
		addEmptyLine(paragraph,1);
		Font myFont = new Font(); myFont.setStyle(Font.NORMAL); myFont.setSize(11);
		paragraph.add(new Paragraph(title, myFont));
		addEmptyLine(paragraph,1);
		document.add(paragraph);
		document.newPage();
		
	}
	
	private static void createTable(Document document, String title, List<String> list) throws BadElementException {
		
		PdfPTable table = new PdfPTable(4);
		PdfPCell titleCell, cell;

		// Write title
		titleCell.setColspan(4);
		titleCell = new PdfPCell(new Paragraph(title, catFont));
		titleCell.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(titleCell);

		// Write table
		cell = new PdfPCell(new Paragraph("Title", subFont));
		cell.setHorizontalAlignment(Element.ALIGN_LEFT);
		table.addCell(cell);
		cell = new PdfPCell(new Paragraph("Year", subFont));
		cell.setHorizontalAlignment(Element.ALIGN_LEFT);
		table.addCell(cell);
		cell = new PdfPCell(new Paragraph("Country", subFont));
		cell.setHorizontalAlignment(Element.ALIGN_LEFT);
		table.addCell(cell);
		cell = new PdfPCell(new Paragraph("Directors", subFont));
		cell.setHorizontalAlignment(Element.ALIGN_LEFT);
		table.addCell(cell);
		table.setHeaderRows(1);
		
		for(String phrase:list){
			String[] chunks= phrase.split("/n");
			for(String chunk:chunks){
				cell = new PdfPCell(new Paragraph(chunk, subFont));
				cell.setHorizontalAlignment(Element.ALIGN_LEFT);
				table.addCell(cell);
			}
		}
		document.add(table);
	}

	private static void addEmptyLine(Paragraph paragraph, int number) {
		
		for(int i = 0; i < number; i++){
			paragraph.add(new Paragraph(" "));
		}
		
	}

}
